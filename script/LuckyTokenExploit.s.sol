// SPDX-License-Identifier: MIT
pragma solidity 0.8.28;

import "forge-std/Script.sol";
import "../src/lucky-token/Challenge.sol";
import "../src/lucky-token/MainContract.sol";
import "../src/lucky-token/LuckyToken.sol";

contract LuckyTokenExploit is Script {
    function run() external {
        // Load private key for deployment
        uint256 deployerPrivateKey = vm.envUint("PRIVATE_KEY");
        address deployer = vm.addr(deployerPrivateKey);

        // Get challenge address from environment
        address challengeAddress = vm.envAddress("CHALLENGE_ADDRESS");
        Challenge challenge = Challenge(challengeAddress);

        // Get token address from challenge
        LuckyToken token = challenge.TOKEN();

        vm.startBroadcast(deployerPrivateKey);

        // Deploy MainContract with 0.9 ETH
        MainContract exploiter = new MainContract{value: 9.5 ether}(
            address(token)
        );

        // Run the exploit
        exploiter.run();

        vm.stopBroadcast();

        // Verify challenge is solved
        require(challenge.isSolved(), "Challenge not solved");

        console.log("Challenge solved!");
        console.log("MainContract deployed at:", address(exploiter));
    }
}
